{"version":3,"sources":["App.js","index.js"],"names":["audioClips","name","src","description","DrumPad","props","audioId","className","onClick","id","Display","descr","find","item","clipId","Container","drumItems","map","key","console","log","App","state","currentClipIx","handleClick","bind","handleKeyPress","document","addEventListener","this","removeEventListener","event","keyName","toUpperCase","undefined","setState","getElementById","play","target","slice","onKeyPress","React","Component","ReactDOM","render"],"mappings":"sNAGMA,G,MAAa,CAAC,CAChBC,KAAM,IAAKC,IAAK,0DAChBC,YAAa,WACd,CACCF,KAAM,IAAKC,IAAK,0DAChBC,YAAa,WACd,CACCF,KAAM,IAAKC,IAAK,0DAChBC,YAAa,WACd,CACCF,KAAM,IAAKC,IAAK,kEAChBC,YAAa,UACd,CACCF,KAAM,IAAKC,IAAK,0DAChBC,YAAa,WACd,CACCF,KAAM,IAAKC,IAAK,yDAChBC,YAAa,aACd,CACCF,KAAM,IAAKC,IAAK,gEAChBC,YAAa,eACd,CACCF,KAAM,IAAKC,IAAK,+DAChBC,YAAa,cACd,CACCF,KAAM,IAAKC,IAAK,0DAChBC,YAAa,WAGjB,SAASC,EAAQC,GACb,IAAIC,EAAUD,EAAMJ,KAAO,IAC3B,OAAO,4BAAQM,UAAU,WAAWC,QAASH,EAAMG,QAASC,GAAIH,GAAUD,EAAMJ,KAC5E,2BAAOQ,GAAIJ,EAAMJ,KAAMM,UAAU,OAAOL,IAAKG,EAAMH,OAI3D,SAASQ,EAAQL,GACb,IAGMM,EAHOX,EAAWY,MAAK,SAACC,GAC1B,OAAOA,EAAKZ,OAASI,EAAMS,UAEZX,YACnB,OAAO,yBAAKM,GAAG,WAAR,WAA2BE,GAGtC,SAASI,EAAUV,GACf,IAAMW,EAAYhB,EAAWiB,KAAI,SAACJ,GAAD,OAC7B,kBAACT,EAAD,CAASc,IAAKL,EAAKZ,KAAMA,KAAMY,EAAKZ,KAAMC,IAAKW,EAAKX,SAExD,OADAiB,QAAQC,IAAIJ,GACL,yBAAKP,GAAG,eAAeD,QAASH,EAAMG,SACxCQ,EACD,kBAACN,EAAD,CAASI,OAAQT,EAAMS,U,IAoDhBO,E,kDA/CX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTC,cAAe,KAEnB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBANP,E,gEAUfE,SAASC,iBAAiB,UAAWC,KAAKH,kB,6CAI1CC,SAASG,oBAAoB,UAAWD,KAAKH,kB,qCAGlCK,GACX,IAAMC,EAAUD,EAAMb,IAAIe,mBACtBC,IAAclC,EAAWY,MAAK,SAACC,GAC/B,OAAIA,EAAKZ,OAAS+B,OAKlBH,KAAKM,SAAS,CACVZ,cAAeS,IAEnBL,SAASS,eAAeJ,GAASK,U,kCAI7BN,GACR,IAAIzB,EAAUyB,EAAMO,OAAO7B,GAAG8B,MAAM,GAAI,GACxCV,KAAKM,SAAS,CACVZ,cAAejB,IAEnBa,QAAQC,IAAId,GACZqB,SAASS,eAAe9B,GAAS+B,S,+BAIjC,OACI,kBAACtB,EAAD,CAAWP,QAASqB,KAAKL,YAAaV,OAAQe,KAAKP,MAAMC,cAAeiB,WAAYX,KAAKH,qB,GA5CnFe,IAAMC,WCrDxBC,IAASC,OACL,kBAAC,EAAD,MACAjB,SAASS,eAAe,U","file":"static/js/main.438c287f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst audioClips = [{\n    name: 'Q', src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n    description: 'Chord-1'\n}, {\n    name: 'W', src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\n    description: 'Chord-2'\n}, {\n    name: 'E', src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\n    description: 'Chord-3'\n}, {\n    name: 'A', src: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\n    description: 'Shaker'\n}, {\n    name: 'S', src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\n    description: 'Open-HH'\n}, {\n    name: 'D', src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\n    description: 'Closed-HH'\n}, {\n    name: 'Z', src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n    description: 'Punchy-Kick'\n}, {\n    name: 'X', src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\n    description: 'Side-Stick'\n}, {\n    name: 'C', src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n    description: 'Snare'\n}];\n\nfunction DrumPad(props) {\n    let audioId = props.name + \"-\";\n    return <button className=\"drum-pad\" onClick={props.onClick} id={audioId}>{props.name}\n        <audio id={props.name} className=\"clip\" src={props.src}/>\n    </button>;\n}\n\nfunction Display(props) {\n    const elem = audioClips.find((item) => {\n        return item.name === props.clipId;\n    });\n    const descr = elem.description;\n    return <div id=\"display\">Listen: {descr}</div>;\n}\n\nfunction Container(props) {\n    const drumItems = audioClips.map((item) =>\n        <DrumPad key={item.name} name={item.name} src={item.src}/>);\n    console.log(drumItems);\n    return <div id=\"drum-machine\" onClick={props.onClick}>\n        {drumItems}\n        <Display clipId={props.clipId}/>\n    </div>;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentClipIx: 'Q'\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n\n    handleKeyPress(event) {\n        const keyName = event.key.toUpperCase();\n        if (undefined !== audioClips.find((item) => {\n            if (item.name === keyName) {\n                return true;\n            }\n            return false;\n        })) {\n            this.setState({\n                currentClipIx: keyName\n            });\n            document.getElementById(keyName).play();\n        }\n    }\n\n    handleClick(event) {\n        let audioId = event.target.id.slice(0, -1);\n        this.setState({\n            currentClipIx: audioId\n        });\n        console.log(audioId);\n        document.getElementById(audioId).play();\n    }\n\n    render() {\n        return (\n            <Container onClick={this.handleClick} clipId={this.state.currentClipIx} onKeyPress={this.handleKeyPress}/>);\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}